{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Programming/todo-list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TasksList({\n  list\n}) {\n  const renderedList = list.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: s\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 43\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: renderedList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = TasksList;\nfunction Input({\n  onInput\n}) {\n  function handleEnter(e) {\n    if (e.key === 'Enter') {\n      onInput(e.target.value);\n      e.target.value = '';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"input\",\n    type: search,\n    size: 10,\n    onKeyDown: e => handleEnter(e),\n    placeholder: \"+ Add task\",\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Input;\nexport default function TodoList() {\n  _s();\n  const [tasks, updateTasks] = useState([]);\n  function handleInput(input) {\n    const newTaskList = [...tasks, input];\n    updateTasks(newTaskList);\n  }\n  function handleDelete() {\n    updateTasks([]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      list: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoList, \"NDXQjfseUMu+wqRvVDPoIARbyRc=\");\n_c3 = TodoList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TasksList\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"TodoList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TasksList","list","renderedList","map","s","i","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Input","onInput","handleEnter","e","key","target","value","className","type","search","size","onKeyDown","placeholder","autoFocus","_c2","TodoList","_s","tasks","updateTasks","handleInput","input","newTaskList","handleDelete","onClick","_c3","$RefreshReg$"],"sources":["/home/andrei/Programming/todo-list/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction TasksList({ list }) {\n  const renderedList = list.map((s, i) => <li key={i}>{s}</li>);\n  return <ul>{renderedList}</ul>\n}\n\nfunction Input({ onInput }) {\n  function handleEnter(e) {\n    if (e.key === 'Enter') {\n      onInput(e.target.value);\n      e.target.value = '';\n    }\n  }\n\n  return <input \n    className=\"input\" \n    type={search}\n    size={10}\n    onKeyDown={e => handleEnter(e)}\n    placeholder=\"+ Add task\" \n    autoFocus \n  />\n}\n\nexport default function TodoList() {\n  const [tasks, updateTasks] = useState([]);\n\n  function handleInput(input) {\n    const newTaskList = [...tasks, input];\n    updateTasks(newTaskList);\n  }\n\n  function handleDelete() {\n    updateTasks([]);\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Todo List</h1>\n      <Input onInput={handleInput} />\n      <TasksList list={tasks} />\n      <button onClick={handleDelete}>Delete All</button>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC3B,MAAMC,YAAY,GAAGD,IAAI,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKR,OAAA;IAAAS,QAAA,EAAaF;EAAC,GAALC,CAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC,CAAC;EAC7D,oBAAOb,OAAA;IAAAS,QAAA,EAAKJ;EAAY;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChC;AAACC,EAAA,GAHQX,SAAS;AAKlB,SAASY,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAC1B,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBH,OAAO,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MACvBH,CAAC,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE;IACrB;EACF;EAEA,oBAAOrB,OAAA;IACLsB,SAAS,EAAC,OAAO;IACjBC,IAAI,EAAEC,MAAO;IACbC,IAAI,EAAE,EAAG;IACTC,SAAS,EAAER,CAAC,IAAID,WAAW,CAACC,CAAC,CAAE;IAC/BS,WAAW,EAAC,YAAY;IACxBC,SAAS;EAAA;IAAAlB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AACJ;AAACgB,GAAA,GAhBQd,KAAK;AAkBd,eAAe,SAASe,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAEzC,SAASoC,WAAWA,CAACC,KAAK,EAAE;IAC1B,MAAMC,WAAW,GAAG,CAAC,GAAGJ,KAAK,EAAEG,KAAK,CAAC;IACrCF,WAAW,CAACG,WAAW,CAAC;EAC1B;EAEA,SAASC,YAAYA,CAAA,EAAG;IACtBJ,WAAW,CAAC,EAAE,CAAC;EACjB;EAEA,oBACEjC,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAIsB,SAAS,EAAC,OAAO;MAAAb,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCb,OAAA,CAACe,KAAK;MAACC,OAAO,EAAEkB;IAAY;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Bb,OAAA,CAACG,SAAS;MAACC,IAAI,EAAE4B;IAAM;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1Bb,OAAA;MAAQsC,OAAO,EAAED,YAAa;MAAA5B,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAClD,CAAC;AAEP;AAACkB,EAAA,CApBuBD,QAAQ;AAAAS,GAAA,GAART,QAAQ;AAAA,IAAAhB,EAAA,EAAAe,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}